//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFServer.ServiceReferencePlace {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferencePlace.IServicePlace")]
    public interface IServicePlace {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePlace/ControlloFK", ReplyAction="http://tempuri.org/IServicePlace/ControlloFKResponse")]
        string ControlloFK(int valore, string value_type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePlace/ControlloFK", ReplyAction="http://tempuri.org/IServicePlace/ControlloFKResponse")]
        System.Threading.Tasks.Task<string> ControlloFKAsync(int valore, string value_type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePlace/VisualizzazionePostiDisponibili", ReplyAction="http://tempuri.org/IServicePlace/VisualizzazionePostiDisponibiliResponse")]
        string VisualizzazionePostiDisponibili(int codice_evento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePlace/VisualizzazionePostiDisponibili", ReplyAction="http://tempuri.org/IServicePlace/VisualizzazionePostiDisponibiliResponse")]
        System.Threading.Tasks.Task<string> VisualizzazionePostiDisponibiliAsync(int codice_evento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePlace/VerificaPosto", ReplyAction="http://tempuri.org/IServicePlace/VerificaPostoResponse")]
        string VerificaPosto(int codice_evento, int numero_posto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePlace/VerificaPosto", ReplyAction="http://tempuri.org/IServicePlace/VerificaPostoResponse")]
        System.Threading.Tasks.Task<string> VerificaPostoAsync(int codice_evento, int numero_posto);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicePlaceChannel : WCFServer.ServiceReferencePlace.IServicePlace, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicePlaceClient : System.ServiceModel.ClientBase<WCFServer.ServiceReferencePlace.IServicePlace>, WCFServer.ServiceReferencePlace.IServicePlace {
        
        public ServicePlaceClient() {
        }
        
        public ServicePlaceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicePlaceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicePlaceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicePlaceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string ControlloFK(int valore, string value_type) {
            return base.Channel.ControlloFK(valore, value_type);
        }
        
        public System.Threading.Tasks.Task<string> ControlloFKAsync(int valore, string value_type) {
            return base.Channel.ControlloFKAsync(valore, value_type);
        }
        
        public string VisualizzazionePostiDisponibili(int codice_evento) {
            return base.Channel.VisualizzazionePostiDisponibili(codice_evento);
        }
        
        public System.Threading.Tasks.Task<string> VisualizzazionePostiDisponibiliAsync(int codice_evento) {
            return base.Channel.VisualizzazionePostiDisponibiliAsync(codice_evento);
        }
        
        public string VerificaPosto(int codice_evento, int numero_posto) {
            return base.Channel.VerificaPosto(codice_evento, numero_posto);
        }
        
        public System.Threading.Tasks.Task<string> VerificaPostoAsync(int codice_evento, int numero_posto) {
            return base.Channel.VerificaPostoAsync(codice_evento, numero_posto);
        }
    }
}
