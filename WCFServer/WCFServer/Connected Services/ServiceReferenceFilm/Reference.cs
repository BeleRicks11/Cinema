//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFServer.ServiceReferenceFilm {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Film", Namespace="http://schemas.datacontract.org/2004/07/WCFDatabaseManager")]
    [System.SerializableAttribute()]
    public partial class Film : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FilmCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReleaseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectionField, value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((this.DurationField.Equals(value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FilmCode {
            get {
                return this.FilmCodeField;
            }
            set {
                if ((this.FilmCodeField.Equals(value) != true)) {
                    this.FilmCodeField = value;
                    this.RaisePropertyChanged("FilmCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Genre {
            get {
                return this.GenreField;
            }
            set {
                if ((object.ReferenceEquals(this.GenreField, value) != true)) {
                    this.GenreField = value;
                    this.RaisePropertyChanged("Genre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReleaseDate {
            get {
                return this.ReleaseDateField;
            }
            set {
                if ((this.ReleaseDateField.Equals(value) != true)) {
                    this.ReleaseDateField = value;
                    this.RaisePropertyChanged("ReleaseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceFilm.IServiceFilm")]
    public interface IServiceFilm {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceFilm/AddFilm", ReplyAction="http://tempuri.org/IServiceFilm/AddFilmResponse")]
        bool AddFilm(string title, int year, string direction, int duration, System.DateTime releaseDate, string genre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceFilm/AddFilm", ReplyAction="http://tempuri.org/IServiceFilm/AddFilmResponse")]
        System.Threading.Tasks.Task<bool> AddFilmAsync(string title, int year, string direction, int duration, System.DateTime releaseDate, string genre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceFilm/DeleteFilm", ReplyAction="http://tempuri.org/IServiceFilm/DeleteFilmResponse")]
        bool DeleteFilm(int filmCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceFilm/DeleteFilm", ReplyAction="http://tempuri.org/IServiceFilm/DeleteFilmResponse")]
        System.Threading.Tasks.Task<bool> DeleteFilmAsync(int filmCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceFilm/GetFilm", ReplyAction="http://tempuri.org/IServiceFilm/GetFilmResponse")]
        WCFServer.ServiceReferenceFilm.Film GetFilm(int filmCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceFilm/GetFilm", ReplyAction="http://tempuri.org/IServiceFilm/GetFilmResponse")]
        System.Threading.Tasks.Task<WCFServer.ServiceReferenceFilm.Film> GetFilmAsync(int filmCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceFilm/GetFilmList", ReplyAction="http://tempuri.org/IServiceFilm/GetFilmListResponse")]
        WCFServer.ServiceReferenceFilm.Film[] GetFilmList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceFilm/GetFilmList", ReplyAction="http://tempuri.org/IServiceFilm/GetFilmListResponse")]
        System.Threading.Tasks.Task<WCFServer.ServiceReferenceFilm.Film[]> GetFilmListAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceFilmChannel : WCFServer.ServiceReferenceFilm.IServiceFilm, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceFilmClient : System.ServiceModel.ClientBase<WCFServer.ServiceReferenceFilm.IServiceFilm>, WCFServer.ServiceReferenceFilm.IServiceFilm {
        
        public ServiceFilmClient() {
        }
        
        public ServiceFilmClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceFilmClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceFilmClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceFilmClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddFilm(string title, int year, string direction, int duration, System.DateTime releaseDate, string genre) {
            return base.Channel.AddFilm(title, year, direction, duration, releaseDate, genre);
        }
        
        public System.Threading.Tasks.Task<bool> AddFilmAsync(string title, int year, string direction, int duration, System.DateTime releaseDate, string genre) {
            return base.Channel.AddFilmAsync(title, year, direction, duration, releaseDate, genre);
        }
        
        public bool DeleteFilm(int filmCode) {
            return base.Channel.DeleteFilm(filmCode);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteFilmAsync(int filmCode) {
            return base.Channel.DeleteFilmAsync(filmCode);
        }
        
        public WCFServer.ServiceReferenceFilm.Film GetFilm(int filmCode) {
            return base.Channel.GetFilm(filmCode);
        }
        
        public System.Threading.Tasks.Task<WCFServer.ServiceReferenceFilm.Film> GetFilmAsync(int filmCode) {
            return base.Channel.GetFilmAsync(filmCode);
        }
        
        public WCFServer.ServiceReferenceFilm.Film[] GetFilmList() {
            return base.Channel.GetFilmList();
        }
        
        public System.Threading.Tasks.Task<WCFServer.ServiceReferenceFilm.Film[]> GetFilmListAsync() {
            return base.Channel.GetFilmListAsync();
        }
    }
}
