//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFServer.ServiceReferenceUser {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/WCFDatabaseManager")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceUser.IServiceUser")]
    public interface IServiceUser {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUser/Registration", ReplyAction="http://tempuri.org/IServiceUser/RegistrationResponse")]
        bool Registration(bool isAdmin, string username, string password, string name, string surname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUser/Registration", ReplyAction="http://tempuri.org/IServiceUser/RegistrationResponse")]
        System.Threading.Tasks.Task<bool> RegistrationAsync(bool isAdmin, string username, string password, string name, string surname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUser/Login", ReplyAction="http://tempuri.org/IServiceUser/LoginResponse")]
        bool Login(bool isAdmin, string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUser/Login", ReplyAction="http://tempuri.org/IServiceUser/LoginResponse")]
        System.Threading.Tasks.Task<bool> LoginAsync(bool isAdmin, string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUser/DeleteUser", ReplyAction="http://tempuri.org/IServiceUser/DeleteUserResponse")]
        bool DeleteUser(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUser/DeleteUser", ReplyAction="http://tempuri.org/IServiceUser/DeleteUserResponse")]
        System.Threading.Tasks.Task<bool> DeleteUserAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUser/EditUser", ReplyAction="http://tempuri.org/IServiceUser/EditUserResponse")]
        bool EditUser(string oldUsername, string newUsername, string newPassword, string newName, string newSurname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUser/EditUser", ReplyAction="http://tempuri.org/IServiceUser/EditUserResponse")]
        System.Threading.Tasks.Task<bool> EditUserAsync(string oldUsername, string newUsername, string newPassword, string newName, string newSurname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUser/GetUser", ReplyAction="http://tempuri.org/IServiceUser/GetUserResponse")]
        WCFServer.ServiceReferenceUser.User GetUser(bool isAdmin, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUser/GetUser", ReplyAction="http://tempuri.org/IServiceUser/GetUserResponse")]
        System.Threading.Tasks.Task<WCFServer.ServiceReferenceUser.User> GetUserAsync(bool isAdmin, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUser/GetUsersList", ReplyAction="http://tempuri.org/IServiceUser/GetUsersListResponse")]
        WCFServer.ServiceReferenceUser.User[] GetUsersList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUser/GetUsersList", ReplyAction="http://tempuri.org/IServiceUser/GetUsersListResponse")]
        System.Threading.Tasks.Task<WCFServer.ServiceReferenceUser.User[]> GetUsersListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUser/CheckStringFK", ReplyAction="http://tempuri.org/IServiceUser/CheckStringFKResponse")]
        bool CheckStringFK(string value, string valueType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceUser/CheckStringFK", ReplyAction="http://tempuri.org/IServiceUser/CheckStringFKResponse")]
        System.Threading.Tasks.Task<bool> CheckStringFKAsync(string value, string valueType);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceUserChannel : WCFServer.ServiceReferenceUser.IServiceUser, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceUserClient : System.ServiceModel.ClientBase<WCFServer.ServiceReferenceUser.IServiceUser>, WCFServer.ServiceReferenceUser.IServiceUser {
        
        public ServiceUserClient() {
        }
        
        public ServiceUserClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceUserClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceUserClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceUserClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Registration(bool isAdmin, string username, string password, string name, string surname) {
            return base.Channel.Registration(isAdmin, username, password, name, surname);
        }
        
        public System.Threading.Tasks.Task<bool> RegistrationAsync(bool isAdmin, string username, string password, string name, string surname) {
            return base.Channel.RegistrationAsync(isAdmin, username, password, name, surname);
        }
        
        public bool Login(bool isAdmin, string username, string password) {
            return base.Channel.Login(isAdmin, username, password);
        }
        
        public System.Threading.Tasks.Task<bool> LoginAsync(bool isAdmin, string username, string password) {
            return base.Channel.LoginAsync(isAdmin, username, password);
        }
        
        public bool DeleteUser(string username) {
            return base.Channel.DeleteUser(username);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserAsync(string username) {
            return base.Channel.DeleteUserAsync(username);
        }
        
        public bool EditUser(string oldUsername, string newUsername, string newPassword, string newName, string newSurname) {
            return base.Channel.EditUser(oldUsername, newUsername, newPassword, newName, newSurname);
        }
        
        public System.Threading.Tasks.Task<bool> EditUserAsync(string oldUsername, string newUsername, string newPassword, string newName, string newSurname) {
            return base.Channel.EditUserAsync(oldUsername, newUsername, newPassword, newName, newSurname);
        }
        
        public WCFServer.ServiceReferenceUser.User GetUser(bool isAdmin, string username) {
            return base.Channel.GetUser(isAdmin, username);
        }
        
        public System.Threading.Tasks.Task<WCFServer.ServiceReferenceUser.User> GetUserAsync(bool isAdmin, string username) {
            return base.Channel.GetUserAsync(isAdmin, username);
        }
        
        public WCFServer.ServiceReferenceUser.User[] GetUsersList() {
            return base.Channel.GetUsersList();
        }
        
        public System.Threading.Tasks.Task<WCFServer.ServiceReferenceUser.User[]> GetUsersListAsync() {
            return base.Channel.GetUsersListAsync();
        }
        
        public bool CheckStringFK(string value, string valueType) {
            return base.Channel.CheckStringFK(value, valueType);
        }
        
        public System.Threading.Tasks.Task<bool> CheckStringFKAsync(string value, string valueType) {
            return base.Channel.CheckStringFKAsync(value, valueType);
        }
    }
}
