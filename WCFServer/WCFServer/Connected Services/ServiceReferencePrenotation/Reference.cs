//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFServer.ServiceReferencePrenotation {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Prenotation", Namespace="http://schemas.datacontract.org/2004/07/WCFDatabaseManager")]
    [System.SerializableAttribute()]
    public partial class Prenotation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferencePrenotation.IServicePrenotation")]
    public interface IServicePrenotation {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePrenotation/DoWork", ReplyAction="http://tempuri.org/IServicePrenotation/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePrenotation/DoWork", ReplyAction="http://tempuri.org/IServicePrenotation/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePrenotation/MakePrenotation", ReplyAction="http://tempuri.org/IServicePrenotation/MakePrenotationResponse")]
        WCFServer.ServiceReferencePrenotation.Prenotation MakePrenotation();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicePrenotation/MakePrenotation", ReplyAction="http://tempuri.org/IServicePrenotation/MakePrenotationResponse")]
        System.Threading.Tasks.Task<WCFServer.ServiceReferencePrenotation.Prenotation> MakePrenotationAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicePrenotationChannel : WCFServer.ServiceReferencePrenotation.IServicePrenotation, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicePrenotationClient : System.ServiceModel.ClientBase<WCFServer.ServiceReferencePrenotation.IServicePrenotation>, WCFServer.ServiceReferencePrenotation.IServicePrenotation {
        
        public ServicePrenotationClient() {
        }
        
        public ServicePrenotationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicePrenotationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicePrenotationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicePrenotationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public WCFServer.ServiceReferencePrenotation.Prenotation MakePrenotation() {
            return base.Channel.MakePrenotation();
        }
        
        public System.Threading.Tasks.Task<WCFServer.ServiceReferencePrenotation.Prenotation> MakePrenotationAsync() {
            return base.Channel.MakePrenotationAsync();
        }
    }
}
